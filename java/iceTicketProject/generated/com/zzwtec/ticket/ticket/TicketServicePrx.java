// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `TicketServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.zzwtec.ticket.ticket;

/**
 * 票务服务接口
 **/
public interface TicketServicePrx extends Ice.ObjectPrx
{
    /**
     * 下单
     **/
    public boolean createOrder(Order myOrder);

    /**
     * 下单
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean createOrder(Order myOrder, java.util.Map<String, String> __ctx);

    /**
     * 下单
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createOrder(Order myOrder);

    /**
     * 下单
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createOrder(Order myOrder, java.util.Map<String, String> __ctx);

    /**
     * 下单
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createOrder(Order myOrder, Ice.Callback __cb);

    /**
     * 下单
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createOrder(Order myOrder, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 下单
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createOrder(Order myOrder, Callback_TicketService_createOrder __cb);

    /**
     * 下单
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createOrder(Order myOrder, java.util.Map<String, String> __ctx, Callback_TicketService_createOrder __cb);

    public Ice.AsyncResult begin_createOrder(Order myOrder, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_createOrder(Order myOrder, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_createOrder(Order myOrder, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_createOrder(Order myOrder, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 下单
     * @param __result The asynchronous result object.
     **/
    public boolean end_createOrder(Ice.AsyncResult __result);

    /**
     * 查询订单
     **/
    public Order[] queryMyOrders(String phone);

    /**
     * 查询订单
     * @param __ctx The Context map to send with the invocation.
     **/
    public Order[] queryMyOrders(String phone, java.util.Map<String, String> __ctx);

    /**
     * 查询订单
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryMyOrders(String phone);

    /**
     * 查询订单
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryMyOrders(String phone, java.util.Map<String, String> __ctx);

    /**
     * 查询订单
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryMyOrders(String phone, Ice.Callback __cb);

    /**
     * 查询订单
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryMyOrders(String phone, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查询订单
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryMyOrders(String phone, Callback_TicketService_queryMyOrders __cb);

    /**
     * 查询订单
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryMyOrders(String phone, java.util.Map<String, String> __ctx, Callback_TicketService_queryMyOrders __cb);

    public Ice.AsyncResult begin_queryMyOrders(String phone, 
                                               IceInternal.Functional_GenericCallback1<Order[]> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_queryMyOrders(String phone, 
                                               IceInternal.Functional_GenericCallback1<Order[]> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_queryMyOrders(String phone, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<Order[]> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_queryMyOrders(String phone, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<Order[]> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询订单
     * @param __result The asynchronous result object.
     **/
    public Order[] end_queryMyOrders(Ice.AsyncResult __result);

    /**
     * 取消订单
     **/
    public boolean cancleOrder(long orderId);

    /**
     * 取消订单
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean cancleOrder(long orderId, java.util.Map<String, String> __ctx);

    /**
     * 取消订单
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_cancleOrder(long orderId);

    /**
     * 取消订单
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_cancleOrder(long orderId, java.util.Map<String, String> __ctx);

    /**
     * 取消订单
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_cancleOrder(long orderId, Ice.Callback __cb);

    /**
     * 取消订单
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_cancleOrder(long orderId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 取消订单
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_cancleOrder(long orderId, Callback_TicketService_cancleOrder __cb);

    /**
     * 取消订单
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_cancleOrder(long orderId, java.util.Map<String, String> __ctx, Callback_TicketService_cancleOrder __cb);

    public Ice.AsyncResult begin_cancleOrder(long orderId, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_cancleOrder(long orderId, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_cancleOrder(long orderId, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_cancleOrder(long orderId, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_BoolCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 取消订单
     * @param __result The asynchronous result object.
     **/
    public boolean end_cancleOrder(Ice.AsyncResult __result);
}
